version: "3"

vars:
  BINARY_NAME: cagent{{if eq OS "windows"}}.exe{{end}}
  MAIN_PKG: ./main.go
  BUILD_DIR: ./bin

tasks:
  default:
    cmd: task --list

  build:
    desc: Build the application binary
    deps: [build-web]
    vars:
      GIT_TAG:
        sh: git describe --tags --exact-match 2>/dev/null || echo dev
      GIT_COMMIT:
        sh: git rev-parse HEAD
      BUILD_DATE:
        sh: date
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - go build -ldflags "-X 'github.com/docker/cagent/cmd/root.Version={{.GIT_TAG}}' -X 'github.com/docker/cagent/cmd/root.Commit={{.GIT_COMMIT}}' -X 'github.com/docker/cagent/cmd/root.BuildTime={{.BUILD_DATE}}'" -o {{.BUILD_DIR}}/{{.BINARY_NAME}} {{.MAIN_PKG}}
    sources:
      - "**/*.go"
      - "**/*.txt"
      - "go.mod"
      - "go.sum"
      - "web/**/*.js"
      - "web/**/*.ts"
      - "web/**/*.tsx"
      - "web/**/*.css"
      - "web/**/*.svg"
    generates:
      - "{{.BUILD_DIR}}/{{.BINARY_NAME}}"

  build-web:
    desc: Build the frontend app
    cmd: cd web && npm install && npm run build
    sources:
      - "web/**/*.js"
      - "web/**/*.ts"
      - "web/**/*.tsx"
      - "web/**/*.css"
      - "web/**/*.svg"

  link:
    desc: Creates a symlink to ~/bin
    cmd: ln -sf {{.USER_WORKING_DIR}}/{{.BUILD_DIR}}/{{.BINARY_NAME}} {{.HOME}}/bin/{{.BINARY_NAME}}

  lint:
    desc: Run golangci-lint
    cmd: golangci-lint run ./...
    sources:
      - "**/*.go"
      - ".golangci.yml"

  test:
    desc: Run tests
    deps: [build-web]
    cmd: go test ./...
    sources:
      - "**/*.go"
      - "**/*.txt"

  build-image:
    desc: Build Docker image
    vars:
      GIT_TAG:
        sh: git describe --tags --exact-match 2>/dev/null || echo dev
      GIT_COMMIT:
        sh: git rev-parse HEAD
      BUILD_DATE:
        sh: date
    cmd: |
      docker buildx build \
        -t docker/cagent:latest \
        --build-arg GIT_TAG="{{.GIT_TAG}}" \
        --build-arg GIT_COMMIT="{{.GIT_COMMIT}}" \
        --build-arg BUILD_DATE="{{.BUILD_DATE}}" \
        .

  cross:
    desc: Build binaries for multiple platforms
    vars:
      GIT_TAG:
        sh: git describe --tags --exact-match 2>/dev/null || echo dev
      GIT_COMMIT:
        sh: git rev-parse HEAD
      BUILD_DATE:
        sh: date
    cmd: |
      docker buildx build \
        --target=cross \
        --build-arg GIT_TAG="{{.GIT_TAG}}" \
        --build-arg GIT_COMMIT="{{.GIT_COMMIT}}" \
        --build-arg BUILD_DATE="{{.BUILD_DATE}}" \
        --platform linux/amd64,linux/arm64,darwin/amd64,darwin/arm64,windows/amd64,windows/arm64 \
        --output=./dist .
