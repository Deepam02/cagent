version: "3"

vars:
  BINARY_NAME: cagent{{if eq OS "windows"}}.exe{{end}}
  MAIN_PKG: ./main.go
  BUILD_DIR: ./bin

tasks:
  default:
    cmds:
      - task --list

  build:
    desc: Build the application binary
    deps: [build-web]
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - go build -o {{.BUILD_DIR}}/{{.BINARY_NAME}} {{.MAIN_PKG}}
    sources:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - "web/**/*.js"
      - "web/**/*.ts"
      - "web/**/*.tsx"
      - "web/**/*.css"
      - "web/**/*.svg"
    generates:
      - "{{.BUILD_DIR}}/{{.BINARY_NAME}}"

  build-web:
    desc: Build the frontend app
    cmds:
      - cd web && npm install && npm run build
    sources:
      - "web/**/*.js"
      - "web/**/*.ts"
      - "web/**/*.tsx"
      - "web/**/*.css"
      - "web/**/*.svg"

  link:
    desc: Creates a symlink to ~/bin
    cmds:
      - ln -sf {{.USER_WORKING_DIR}}/{{.BUILD_DIR}}/{{.BINARY_NAME}} {{.HOME}}/bin/{{.BINARY_NAME}}

  lint:
    desc: Run golangci-lint
    cmds:
      - golangci-lint run ./...
    sources:
      - "**/*.go"
      - ".golangci.yml"

  test:
    desc: Run tests
    deps: [build-web]
    cmds:
      - go test ./...
    sources:
      - "**/*.go"

  build-image:
    desc: Build Docker image
    cmds:
      - docker build -t docker/cagent:latest .

  cross:
    desc: Build binaries for multiple platforms
    cmds:
      - docker buildx build --platform linux/amd64,linux/arm64,darwin/amd64,darwin/arm64,windows/amd64,windows/arm64 --target=cross --output=./dist .
